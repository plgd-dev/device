# Workflow to run tests, publish coverage to codecov and run SonarCloud scan
name: Test

# Run for events in main repository (for forked repository look in test-for-fork.yml)
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    # don't run for forks
    if: github.event_name == 'push' ||
      (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) ||
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: cloud-server-debug
            coverage: false
            tag: ghcr.io/iotivity/iotivity-lite/cloud-server-debug:master
          - name: cloud-server-discovery-resource-observable-debug
            coverage: true
            tag: ghcr.io/iotivity/iotivity-lite/cloud-server-discovery-resource-observable-debug:master

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: "Full checkout"
        if: ${{ matrix.coverage }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: "Shall checkout"
        if: ${{ !matrix.coverage }}
        uses: actions/checkout@v3

      - name: Set up Go 1.18
        uses: actions/setup-go@v3
        with:
          go-version: "1.18" # The Go version to download (if necessary) and use.

      - run: go version

      - name: Setup kernel for multicast messages, increase read buffer to 8MB
        run: sudo sysctl -w net.core.rmem_max=8388608

      - name: Run integration tests
        run: make test DEVSIM_IMAGE=${{ matrix.tag }}

      - name: Collect iotivity logs for devsim-net-host failed test
        if: ${{ failure() }}
        run: docker logs -t devsim-net-host && cat .tmp/devsim-net-host/0.log

      # Run after integration tests, because they first clean-up the output directory
      - name: Run unit tests
        if: ${{ matrix.coverage }}
        run: make unit-test

      - name: SonarCloud Scan
        if: ${{ matrix.coverage }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Publish the coverage
        if: ${{ matrix.coverage }}
        run: bash <(curl -s https://codecov.io/bash)
